#Область ОбработчикиСобытий 

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
    ФлагОтказа = ПроверкаТипаДатыДокумента(Отказ);
	Если ФлагОтказа = Истина Тогда
		Возврат; 
	КонецЕсли;
	ДвиженияПоРегиструВКМВыполненныеКлиентуРаботы();	
	Отказ = ДвиженияПоРегиструВКМВыполненныеСотрудникомРаботы();
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиентов.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиентов КАК ВКМ_ОбслуживаниеКлиентов
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиентов.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	                                                
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда 
		Если ВКМ_Специалист <> Ссылка.ВКМ_Специалист Тогда
			ОповеститьОбИзмененияхВДокументе(1,ВКМ_Специалист);
		КонецЕсли;
        Если ВКМ_ДатаПроведенияРабот <> Ссылка.ВКМ_ДатаПроведенияРабот Тогда
			ОповеститьОбИзмененияхВДокументе(2,ВКМ_ДатаПроведенияРабот);
		КонецЕсли;
	    Если ВКМ_ВремяНачалаРабот <> Ссылка.ВКМ_ВремяНачалаРабот Тогда
			ОповеститьОбИзмененияхВДокументе(3,ВКМ_ВремяНачалаРабот);
		КонецЕсли; 
		Возврат;
	Иначе
		ЭлементСправочника = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
		ЭлементСправочника.Текст = СтрШаблон("Документ %1 был записан впервые",ЭтотОбъект);
		ЭлементСправочника.Записать();	
	КонецЕсли;
КонецПроцедуры 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПроверкаТипаДатыДокумента(Отказ)

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.ВидДоговора
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиентов КАК ВКМ_ОбслуживаниеКлиентов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|		ПО ВКМ_ОбслуживаниеКлиентов.ВКМ_Договор = ДоговорыКонтрагентов.Ссылка
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиентов.Дата
		|		МЕЖДУ ДоговорыКонтрагентов.ВКМ_ПериодДействияНачало И ДоговорыКонтрагентов.ВКМ_ПериодДействияКонец";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	НайденныйДоговор = Выборка.Следующий();
	Если (Выборка.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание И НайденныйДоговор = Ложь) или
	НЕ (Выборка.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание) Тогда
		Отказ = истина;
		Сообщить("Проверьте вид договора и его дату");
		Возврат Отказ;	
	КонецЕсли;
КонецФункции

Процедура ДвиженияПоРегиструВКМВыполненныеКлиентуРаботы()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиентов.ВКМ_Договор.ВКМ_СтоимостьЧаса
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиентов КАК ВКМ_ОбслуживаниеКлиентов
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиентов.Ссылка = &Ссылка";
		
		
	Запрос.УстановитьПараметр("Ссылка",Ссылка );
	
	РезультатЗапроса = Запрос.Выполнить();
	
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	Для Каждого ТекСтрокаВыполненныеРаботы Из ВКМ_ВыполненныеРаботы Цикл
		Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
		Движение.Период = Дата;
		Движение.ВКМ_Клиент = ВКМ_Клиент;
		Движение.ВКМ_Договор = ВКМ_Договор;
		Движение.ВКМ_КоличествоЧасов = ТекСтрокаВыполненныеРаботы.ВКМ_ЧасыКОплатеКлиенту;
		Движение.ВКМ_СуммаКОплате = Выборка.ВКМ_ДоговорВКМ_СтоимостьЧаса * Движение.ВКМ_КоличествоЧасов;
		
	КонецЦикла; 
		
КонецПроцедуры

Процедура ОповеститьОбИзмененияхВДокументе(ПричинаИзменения,Изменение)
		
	ЭлементСправочника = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
	Если ПричинаИзменения = 1 Тогда 
		ТекстИзменения = "Назначен новый специалист:";
	ИначеЕсли ПричинаИзменения = 2 Тогда
		ТекстИзменения = "Назначена новая дата проведения работы:";
	ИначеЕсли ПричинаИзменения = 3 Тогда
		ТекстИзменения = "Назначено новое время проведения работ:";
	КонецЕсли;	
		
	ЭлементСправочника.Текст = СтрШаблон("В документе %1 было изменение. %2 %3",Ссылка,ТекстИзменения,Изменение);
	ЭлементСправочника.Записать();
	
КонецПроцедуры

Функция ДвиженияПоРегиструВКМВыполненныеСотрудникомРаботы()
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Период КАК Период,
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад КАК Оклад,
		|	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот, 0) КАК ПроцентОтРабот,
		|	ДоговорыКонтрагентов.ВидДоговора КАК ВидДоговора,
		|	ДоговорыКонтрагентов.ВКМ_СтоимостьЧаса КАК СтоимостьЧаса,
		|	ДоговорыКонтрагентов.Владелец КАК Владелец
		|ИЗ
		|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Период, ) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних,
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник = &Сотрудник
		|	И МЕСЯЦ(ВКМ_УсловияОплатыСотрудниковСрезПоследних.Период) = МЕСЯЦ(&Период)
		|	И ДоговорыКонтрагентов.ВидДоговора = &ВидДоговора
		|	И ДоговорыКонтрагентов.Владелец = &Контрагент
		|	И ДоговорыКонтрагентов.ВКМ_ПериодДействияКонец МЕЖДУ &ПериодНачало И &ПериодКонец";  
	
	
	Запрос.УстановитьПараметр("Период",Дата);
	Запрос.УстановитьПараметр("ПериодНачало", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ПериодКонец", (КонецМесяца(Дата)-86399));
	Запрос.УстановитьПараметр("Сотрудник",ВКМ_Специалист);
	Запрос.УстановитьПараметр("ВидДоговора", Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание);
	Запрос.УстановитьПараметр("Контрагент", ВКМ_Клиент);
		
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать(); 
	
	Если Не Выборка.Следующий() Тогда 
		
		Возврат Истина;
	КонецЕсли; 

	Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина;
	Для Каждого ТекСтрокаВКМ_ВыполненныеРаботы Из ВКМ_ВыполненныеРаботы Цикл
		Движение = Движения.ВКМ_ВыполненныеСотрудникомРаботы.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Сотрудник = ВКМ_Специалист;
		Движение.ЧасовКОплате = ТекСтрокаВКМ_ВыполненныеРаботы.ВКМ_ЧасыКОплатеКлиенту; 
		СуммаКОплате = Движение.ЧасовКОплате * Выборка.СтоимостьЧаса * Выборка.ПроцентОтРабот / 100;
		Если Выборка.ПроцентОтРабот = 0 Тогда
			Сообщить("Внимание процент специалиста = 0 ");
		КонецЕсли;
		Движение.СуммаКОплате = СуммаКОплате;
	КонецЦикла;
	Возврат Ложь;
КонецФункции

#КонецОбласти

